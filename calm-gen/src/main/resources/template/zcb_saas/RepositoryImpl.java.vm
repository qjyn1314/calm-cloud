package ${serviceImpl};

import cn.hutool.core.lang.Assert;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.github.pagehelper.PageInfo;
import com.zhichubao.common.consts.BaseConsts;
import ${entity}.${className};
import ${repository}.${className}Repository;
import ${mapper}.${className}Mapper;
import com.zhichubao.mybatis.page.PageRequest;
import com.zhichubao.mybatis.repository.impl.BaseRepositoryImpl;
import com.zhichubao.mybatis.utils.Wraps;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * ${comments} 资源库实现
 *
 * @author ${author} ${datetime}
 */
@Repository
public class ${className}RepositoryImpl extends BaseRepositoryImpl<${className}> implements ${className}Repository {

    @Autowired
    private ${className}Mapper ${classname}Mapper;

    /**
     * 分页查询
     *
     * @author ${author} ${datetime}
     */
    @Override
    public PageInfo<${className}> page(PageRequest pageRequest, ${className} ${classname}) {
        LambdaQueryWrapper<${className}> queryPageWrapper = Wraps.by(new ${className}().setTenantId(${classname}.getTenantId()));
        return this.pageAndSort(pageRequest, queryPageWrapper);
    }

    /**
     * 验证值
     *
     * @author ${author} ${datetime}
     */
    @Override
    public void validate${className}(${className} ${classname},${pk.attrType} ${pk.lowerAttrName}) {

    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public void updateEnabled(${className} ${classname}, Boolean flag, Long versionNum) {
        Assert.notNull(${classname}, BaseConsts.ErrorCode.DATA_NOT_EXISTS);
        ${classname}.setEnabledFlag(flag);
        ${classname}.setVersionNum(versionNum);
        this.updateByIdOptional(${classname}, ${className}.FIELD_ENABLED_FLAG);
    }


}
