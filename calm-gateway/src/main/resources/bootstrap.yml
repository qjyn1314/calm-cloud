# nacos的配置，在项目初始化的时候，要保证先从配置中心进行配置的拉取，拉取配置之后，才能保证项目的正常启动
# springboot的的配置文件加载是存在优先顺序的，bootstrap.yml优先级高于application.properties
# 在nacos中配置的的dataid规则，参考： https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html
#在 Nacos Spring Cloud 中，dataId 的完整格式如下：${prefix}-${spring.profiles.active}.${file-extension}
#prefix 默认为 spring.application.name 的值，也可以通过配置项 spring.cloud.nacos.config.prefix来配置。
#spring.profiles.active 即为当前环境对应的 profile，详情可以参考 Spring Boot文档。
#    注意：当 spring.profiles.active 为空时，对应的连接符 - 也将不存在，dataId 的拼接格式变成 ${prefix}.${file-extension}
#file-exetension 为配置内容的数据格式，可以通过配置项 spring.cloud.nacos.config.file-extension 来配置。目前只支持 properties 和 yaml 类型。
#    通过 Spring Cloud 原生注解 @RefreshScope 实现配置自动更新：
# 启动项目之前必须先配置其配置文件
# 添加配置时其DataID的公式：${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension} ，
#即：项目名称-当前环境.文件后缀
spring:
  application:
    name: calm-gateway
  boot:
    admin:
      client:
        connect-timeout: 5000
        period: 10000
        read-timeout: 5000
  cloud:
    nacos:
      config:
        # 配置文件的后缀
        file-extension: yml
    gateway:
      # 跨域问题 参考：https://blog.csdn.net/qq_27384769/article/details/108375731
      globalcors:
        cors-configurations:
          '[/**]':
            allow-credentials: true
            allowed-origins: '*'
            allowed-methods: '*'
            allowed-headers: '*'
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - StripPrefix=1
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials Vary, RETAIN_UNIQUE
      routes:
        - id: calm-user
          uri: lb://calm-user
          predicates:
            - Path=/user/**
        - id: calm-web
          uri: lb://calm-web
          predicates:
            - Path=/web/**
        - id: calm-auth
          uri: lb://calm-auth
          predicates:
            - Path=/auth/**
        - id: calm-sequence
          uri: lb://calm-sequence
          predicates:
            - Path=/sequence/**
  thymeleaf:
    check-template: false
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
# 日志配置
logging:
  config: classpath:logback-spring.xml
  level:
    com.calm.provider.service: debug

#feign配置参考：http://c.biancheng.net/view/5362.html
feign:
  client:
    config:
      feignName:
        connectTimeout: 5000
        readTimeout: 5000
